import test from 'ava';
import { expect } from 'chai';
import * as input from '../../src/input';

const { keyboard } = input;
const { combo, events, keys, state } = keyboard;

test('Input Library Object Definition', t => {
	expect(keyboard.Key).to.be.a('function');
});

test('Input Combo Library Object Definition', t => {
	expect(combo.AdvanceKeyCombo).to.be.a('function');
	expect(combo.KeyCombo).to.be.a('function');
	expect(combo.ProcessKeyCombo).to.be.a('function');
});

test('Input Events Library Object Definition', t => {
	expect(events.AddKeyDown).to.be.a('function');
	expect(events.AddKeyPress).to.be.a('function');
	expect(events.AddKeyUp).to.be.a('function');
	expect(events.ProcessKeyDown).to.be.a('function');
	expect(events.ProcessKeyUp).to.be.a('function');
	expect(events.RemoveKeyDown).to.be.a('function');
	expect(events.RemoveKeyPress).to.be.a('function');
	expect(events.RemoveKeyUp).to.be.a('function');
});

test('Input Keys Library Object Definition', t => {
	expect(keys.A).to.be.a('function');
	expect(keys.ALT).to.be.a('function');
	expect(keys.B).to.be.a('function');
	expect(keys.BACKSPACE).to.be.a('function');
	expect(keys.BACKWARD_SLASH).to.be.a('function');
	expect(keys.C).to.be.a('function');
	expect(keys.CAPS_LOCK).to.be.a('function');
	expect(keys.CLEAR).to.be.a('function');
	expect(keys.CLOSED_BRACKET).to.be.a('function');
	expect(keys.COLON).to.be.a('function');
	expect(keys.COMMA).to.be.a('function');
	expect(keys.CONTROL).to.be.a('function');
	expect(keys.D).to.be.a('function');
	expect(keys.DELETE).to.be.a('function');
	expect(keys.DOWN).to.be.a('function');
	expect(keys.E).to.be.a('function');
	expect(keys.EIGHT).to.be.a('function');
	expect(keys.END).to.be.a('function');
	expect(keys.ENTER).to.be.a('function');
	expect(keys.EQUALS).to.be.a('function');
	expect(keys.ESC).to.be.a('function');
	expect(keys.F).to.be.a('function');
	expect(keys.F1).to.be.a('function');
	expect(keys.F10).to.be.a('function');
	expect(keys.F11).to.be.a('function');
	expect(keys.F12).to.be.a('function');
	expect(keys.F13).to.be.a('function');
	expect(keys.F14).to.be.a('function');
	expect(keys.F15).to.be.a('function');
	expect(keys.F2).to.be.a('function');
	expect(keys.F3).to.be.a('function');
	expect(keys.F4).to.be.a('function');
	expect(keys.F5).to.be.a('function');
	expect(keys.F6).to.be.a('function');
	expect(keys.F7).to.be.a('function');
	expect(keys.F8).to.be.a('function');
	expect(keys.F9).to.be.a('function');
	expect(keys.FIVE).to.be.a('function');
	expect(keys.FOUR).to.be.a('function');
	expect(keys.G).to.be.a('function');
	expect(keys.H).to.be.a('function');
	expect(keys.HELP).to.be.a('function');
	expect(keys.HOME).to.be.a('function');
	expect(keys.I).to.be.a('function');
	expect(keys.INSERT).to.be.a('function');
	expect(keys.J).to.be.a('function');
	expect(keys.K).to.be.a('function');
	expect(keys.L).to.be.a('function');
	expect(keys.LEFT).to.be.a('function');
	expect(keys.M).to.be.a('function');
	expect(keys.MINUS).to.be.a('function');
	expect(keys.N).to.be.a('function');
	expect(keys.NINE).to.be.a('function');
	expect(keys.NUM_LOCK).to.be.a('function');
	expect(keys.NUMPAD_0).to.be.a('function');
	expect(keys.NUMPAD_1).to.be.a('function');
	expect(keys.NUMPAD_2).to.be.a('function');
	expect(keys.NUMPAD_3).to.be.a('function');
	expect(keys.NUMPAD_4).to.be.a('function');
	expect(keys.NUMPAD_5).to.be.a('function');
	expect(keys.NUMPAD_6).to.be.a('function');
	expect(keys.NUMPAD_7).to.be.a('function');
	expect(keys.NUMPAD_8).to.be.a('function');
	expect(keys.NUMPAD_9).to.be.a('function');
	expect(keys.NUMPAD_ADD).to.be.a('function');
	expect(keys.NUMPAD_DECIMAL).to.be.a('function');
	expect(keys.NUMPAD_DIVIDE).to.be.a('function');
	expect(keys.NUMPAD_ENTER).to.be.a('function');
	expect(keys.NUMPAD_MULTIPLY).to.be.a('function');
	expect(keys.NUMPAD_SUBTRACT).to.be.a('function');
	expect(keys.O).to.be.a('function');
	expect(keys.ONE).to.be.a('function');
	expect(keys.OPEN_BRACKET).to.be.a('function');
	expect(keys.P).to.be.a('function');
	expect(keys.PAGE_DOWN).to.be.a('function');
	expect(keys.PAGE_UP).to.be.a('function');
	expect(keys.PERIOD).to.be.a('function');
	expect(keys.PLUS).to.be.a('function');
	expect(keys.Q).to.be.a('function');
	expect(keys.QUESTION_MARK).to.be.a('function');
	expect(keys.QUOTES).to.be.a('function');
	expect(keys.R).to.be.a('function');
	expect(keys.RIGHT).to.be.a('function');
	expect(keys.S).to.be.a('function');
	expect(keys.SEVEN).to.be.a('function');
	expect(keys.SHIFT).to.be.a('function');
	expect(keys.SIX).to.be.a('function');
	expect(keys.SPACEBAR).to.be.a('function');
	expect(keys.T).to.be.a('function');
	expect(keys.TAB).to.be.a('function');
	expect(keys.THREE).to.be.a('function');
	expect(keys.TILDE).to.be.a('function');
	expect(keys.TWO).to.be.a('function');
	expect(keys.U).to.be.a('function');
	expect(keys.UNDERSCORE).to.be.a('function');
	expect(keys.UP).to.be.a('function');
	expect(keys.V).to.be.a('function');
	expect(keys.W).to.be.a('function');
	expect(keys.X).to.be.a('function');
	expect(keys.Y).to.be.a('function');
	expect(keys.Z).to.be.a('function');
	expect(keys.ZERO).to.be.a('function');
});